---

firewallgen_networks_kayobe_defaults:
  - "admin_oc_net_name"
  - "oob_oc_net_name"
  - "provision_oc_net_name"
  - "oob_wl_net_name"
  - "provision_wl_net_name"
  - "internal_net_name"
  - "public_net_name"
  - "tunnel_net_name"
  - "storage_net_name"
  - "storage_mgmt_net_name"
  - "inspection_net_name"
  - "cleaning_net_name"

firewallgen_networks: "{{ firewallgen_networks_kayobe_defaults + external_net_names | default([])}}"

# unsafe is to stop it getting templated i.e we want the curly braces
firewallgen_interface_tmpl: !unsafe "{{ %s | net_interface }}"

firewallgen_ipv4_input_allow_rewrite_rules_all:
  - '. | map( if .processes[].name == "sshd" then .interface = "{% raw %}{{ admin_oc_net_interface }}{% endraw %}" else . end)'
  # ntpd should only use the admin_oc_net_interface
  - >-
    . | map(select(.proto != "udp" or .port != 123 or
                   .interface == "{{ internal_net_name | net_interface }}" or
                   .interface == "docker0" or
                   .interface == "lo" ))
  # rpcbind is using ephemeral port - we need to lock this to a particular port
  # in order to generate a firewall rule
  - '. | map(select(.processes[].name != "rpcbind"))'
  # http://rsyslog-users.1305293.n2.nabble.com/Rsyslogd-listening-on-random-UDP-port-td7593695.html
  # dszumski: TLDR is that it is opened by rsyslog to forward logs to fluentd,
  # never runs recv() and that we should block it externally.
  - '. | map(select(.proto != "udp" or .processes[].name != "rsyslogd"))'
  - >-
    . | map(if .processes[].name == "mtail" then
        .interface = "{{ firewallgen_interface_tmpl % 'internal_net_name' }}" |
        .ip = "{% raw %}{{ internal_net_name | net_ip }}{% endraw %}"
      else . end)
  - >-
    . | map(if .processes[].name == "cadvisor" then
        .interface = "{{ firewallgen_interface_tmpl % 'internal_net_name' }}" |
        .ip = "{% raw %}{{ internal_net_name | net_ip }}{% endraw %}"
      else . end)

firewallgen_ipv4_input_allow_rewrite_rules: >-
  {{ firewallgen_ipv4_input_allow_rewrite_rules_all +
     firewallgen_ipv4_input_allow_rewrite_rules_seed | default([]) +
     firewallgen_ipv4_input_allow_rewrite_rules_controllers | default([]) +
     firewallgen_ipv4_input_allow_rewrite_rules_ceph | default([]) +
     firewallgen_ipv4_input_allow_rewrite_rules_compute | default([]) +
     firewallgen_ipv4_input_allow_rewrite_rules_monitoring | default([]) }}

firewallgen_ipv4_input_allow_custom_rules_all: []

firewallgen_ipv4_input_allow_custom_rules: >-
  {{ firewallgen_ipv4_input_allow_custom_rules_all +
     firewallgen_ipv4_input_allow_custom_rules_seed | default([]) +
     firewallgen_ipv4_input_allow_custom_rules_controllers | default([]) +
     firewallgen_ipv4_input_allow_custom_rules_ceph | default([]) +
     firewallgen_ipv4_input_allow_custom_rules_compute | default([]) +
     firewallgen_ipv4_input_allow_custom_rules_monitoring | default([]) }}
